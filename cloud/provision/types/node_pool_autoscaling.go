// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NodePoolAutoscaling node pool autoscaling
// swagger:model NodePoolAutoscaling
type NodePoolAutoscaling struct {

	// cooldown period
	CooldownPeriod int32 `json:"cooldown_period,omitempty"`

	// enabled
	// Required: true
	Enabled *bool `json:"enabled"`

	// max nodes
	MaxNodes int32 `json:"max_nodes,omitempty"`

	// min nodes
	MinNodes int32 `json:"min_nodes,omitempty"`

	// scaling strategy
	ScalingStrategy *NodePoolAutoscalingScalingStrategy `json:"scaling_strategy,omitempty"`

	// suspended
	Suspended bool `json:"suspended,omitempty"`
}

// Validate validates this node pool autoscaling
func (m *NodePoolAutoscaling) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEnabled(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScalingStrategy(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NodePoolAutoscaling) validateEnabled(formats strfmt.Registry) error {

	if err := validate.Required("enabled", "body", m.Enabled); err != nil {
		return err
	}

	return nil
}

func (m *NodePoolAutoscaling) validateScalingStrategy(formats strfmt.Registry) error {

	if swag.IsZero(m.ScalingStrategy) { // not required
		return nil
	}

	if m.ScalingStrategy != nil {
		if err := m.ScalingStrategy.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("scaling_strategy")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NodePoolAutoscaling) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NodePoolAutoscaling) UnmarshalBinary(b []byte) error {
	var res NodePoolAutoscaling
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
