// Code generated by go-swagger; DO NOT EDIT.

package types

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NodePoolUpgradeRequest Upgrade (or downgrade) the Kubernetes version for a node pool
// swagger:model NodePoolUpgradeRequest
type NodePoolUpgradeRequest struct {

	// Kubernetes version to upgrade (or downgrade) to
	// Required: true
	KubernetesVersion *string `json:"kubernetes_version"`
}

// Validate validates this node pool upgrade request
func (m *NodePoolUpgradeRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateKubernetesVersion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NodePoolUpgradeRequest) validateKubernetesVersion(formats strfmt.Registry) error {

	if err := validate.Required("kubernetes_version", "body", m.KubernetesVersion); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NodePoolUpgradeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NodePoolUpgradeRequest) UnmarshalBinary(b []byte) error {
	var res NodePoolUpgradeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
